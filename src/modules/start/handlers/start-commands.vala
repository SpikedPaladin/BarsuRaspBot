using BarsuTimetable;
using Telegram;

namespace Start {
    
    public class StartCommands {
        
        public async void start(Message msg) {
            config_manager.set_user_state(msg.from.id, StartupState.FACULTY);
            
            yield bot.send(new SendMessage() {
                chat_id = msg.chat.id,
                parse_mode = ParseMode.MARKDOWN,
                reply_markup = faculty_keyboard(),
                text = "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n\nüï∂Ô∏è –í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç"
            });
            
            // config_manager.set_user_state(msg.from.id, StartupState.POST);
            
            // yield bot.send(new SendMessage() {
            //     chat_id = msg.chat.id,
            //     parse_mode = ParseMode.MARKDOWN,
            //     reply_markup = Keyboards.post_keyboard,
            //     text = "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n\n" +
            //            "‚úçÔ∏è –¢—ã —Å—Ç—É–¥–µ–Ω—Ç –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å?\n"
            // });
        }
        public ReplyKeyboardMarkup faculty_keyboard() {
            var keyboard = new ReplyKeyboardMarkup() { is_persistent = true, resize_keyboard = true };
            
            foreach (var faculty in group_manager.get_faculties()) {
                keyboard.add_button(new KeyboardButton() { text = faculty.name }).new_row();
            }
            
            return keyboard;
        }
        
        public async void restart(Message msg) {
            config_manager.remove_config(msg.from.id, false);
            
            yield start(msg);
        }
    }
}
