using DataStore;
using Telegram;

namespace Barsu {
    
    public class ChatCommands {
        
        public async void apk(Message msg) {
            yield bot.send(new SendMessage() {
                chat_id = msg.chat.id,
                text = "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ë–∞—Ä–ì–£*\n–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: v1.0.8",
                reply_markup = Keyboards.apk_keyboard
            });
        }
        
        public async void day_command(Message msg) {
            var args = msg.get_command_arguments();
            
            var date = (msg.text == "‚ñ∂Ô∏è –°–µ–≥–æ–¥–Ω—è" || msg?.get_command_name() == "day") ? new DateTime.now() : new DateTime.now().add_days(1);
            string? group = null;
            
            if (msg.chat.type != Chat.Type.PRIVATE)
                group = data.get_chat_group(msg.chat.id) ?? data.get_group(msg.from.id);
            else
                group = data.get_group(msg.from.id);
            
            if (args != null)
                group = data.parse_group(args);
            
            if (group != null) {
                var timetable = yield timetable_manager.get_timetable(group, get_current_week().format("%F"));
                var day = timetable?.get_day_schedule(date);
                
                if (day != null)
                    yield bot.send(new SendMessage() {
                        chat_id = msg.chat.id,
                        parse_mode = ParseMode.MARKDOWN,
                        text = @"üë•Ô∏è –ì—Ä—É–ø–ø–∞: *$(group)*\n" + day.to_string()
                    });
                else
                    yield bot.send(new SendMessage() {
                        chat_id = msg.chat.id,
                        text = @"üéâÔ∏è $(msg.get_command_name() == "day" ? "–°–µ–≥–æ–¥–Ω—è" : "–ó–∞–≤—Ç—Ä–∞") –ø–∞—Ä –Ω–µ—Ç!"
                    });
            } else if (data.get_post(msg.from.id) == UserPost.TEACHER) {
                var timetable = yield timetable_manager.get_teacher(data.get_config(msg.from.id).name, get_current_week().format("%F"));
                var day = timetable?.get_day_schedule(date);
                var name = data.get_config(msg.from.id).name;
                
                if (day != null)
                    yield bot.send(new SendMessage() {
                        chat_id = msg.chat.id,
                        parse_mode = ParseMode.MARKDOWN,
                        text = @"üßë‚Äçüè´Ô∏è –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: *$(name)*\n" + day.to_string()
                    });
                else
                    yield bot.send(new SendMessage() {
                        chat_id = msg.chat.id,
                        text = @"üéâÔ∏è $(msg.get_command_name() == "day" ? "–°–µ–≥–æ–¥–Ω—è" : "–ó–∞–≤—Ç—Ä–∞") –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç!"
                    });
            } else if (msg.chat.type == Chat.Type.PRIVATE)
                yield send_group_warning(msg.chat.id, msg.from.id);
            else
                yield send_group_error("rasp", msg.chat.id);
        }
        
        public async void rasp_command(Message msg) {
            var args = msg.get_command_arguments();
            
            var date = (msg.is_command() && msg.get_command_name().has_suffix("next") || msg.text == "üóìÔ∏è –°–ª–µ–¥. –Ω–µ–¥–µ–ª—è") ? get_next_week() : get_current_week();
            string? group = null;
            
            if (msg.chat.type != Chat.Type.PRIVATE)
                group = data.get_chat_group(msg.chat.id) ?? data.get_group(msg.from.id);
            else
                group = data.get_group(msg.from.id);
            
            if (args != null)
                group = data.parse_group(args);
            
            var str_date = date.format("%F");
            
            if (group != null)
                yield send_timetable_keyboard(group, str_date, msg.chat.id);
            else if (data.get_post(msg.from.id) == UserPost.TEACHER)
                yield send_teacher_keyboard(data.get_config(msg.from.id).name, str_date, msg.chat.id);
            else if (msg.chat.type == Chat.Type.PRIVATE)
                yield send_group_warning(msg.chat.id, msg.from.id);
            else
                yield send_group_error("rasp", msg.chat.id);
        }
        
        public async void next_command(Message msg) {
            var args = msg.get_command_arguments();
            
            string? group = null;
            
            if (msg.chat.type != Chat.Type.PRIVATE)
                group = data.get_chat_group(msg.chat.id) ?? data.get_group(msg.from.id);
            else
                group = data.get_group(msg.from.id);
            
            if (args != null)
                group = data.parse_group(args);
            
            if (group != null)
                yield send_next_lesson(group, msg.chat.id);
            else if (data.get_post(msg.from.id) == UserPost.TEACHER)
                yield send_next_teacher(data.get_config(msg.from.id).name, msg.chat.id);
            else if (msg.chat.type == Chat.Type.PRIVATE)
                yield send_group_warning(msg.chat.id, msg.from.id);
            else
                yield send_group_error("next", msg.chat.id);
        }
        
        public async void bells_command(Message msg) {
            yield bot.send(new SendMessage() {
                chat_id = msg.chat.id,
                parse_mode = ParseMode.MARKDOWN,
                text =
                "üîîÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä:\n\n" +
                "1Ô∏è‚É£Ô∏è –ü–∞—Ä–∞: *8.00-9.25*\n" +
                "–ü–µ—Ä–µ—Ä—ã–≤: *10* –º–∏–Ω\n" +
                "2Ô∏è‚É£Ô∏è –ü–∞—Ä–∞: *9.35-11.00*\n" +
                "–ü–µ—Ä–µ—Ä—ã–≤: *30* –º–∏–Ω\n" +
                "3Ô∏è‚É£Ô∏è –ü–∞—Ä–∞: *11.30-12.55*\n" +
                "–ü–µ—Ä–µ—Ä—ã–≤: *10* –º–∏–Ω\n" +
                "4Ô∏è‚É£Ô∏è –ü–∞—Ä–∞: *13.05-14.30*\n" +
                "–ü–µ—Ä–µ—Ä—ã–≤: *10* –º–∏–Ω\n" +
                "5Ô∏è‚É£Ô∏è –ü–∞—Ä–∞: *14.40-16.05*\n" +
                "–ü–µ—Ä–µ—Ä—ã–≤: *20* –º–∏–Ω\n" +
                "6Ô∏è‚É£Ô∏è –ü–∞—Ä–∞: *16.25-17.50*\n" +
                "–ü–µ—Ä–µ—Ä—ã–≤: *10* –º–∏–Ω\n" +
                "7Ô∏è‚É£Ô∏è –ü–∞—Ä–∞: *18.00-19.25*\n" +
                "–ü–µ—Ä–µ—Ä—ã–≤: *10* –º–∏–Ω\n" +
                "8Ô∏è‚É£Ô∏è –ü–∞—Ä–∞: *19.35-21.00*\n"
            });
        }
        
        public async void settings_command(Message msg) {
            if (msg.chat.type != Chat.Type.PRIVATE) {
                var chat_member = yield bot.get_chat_member(msg.chat.id, msg.from.id);
                
                if (chat_member is ChatMemberOwner) {
                    var group = data.get_chat_group(msg.chat.id);
                    
                    if (group != null)
                        yield send_settings(msg.chat.id);
                    else
                        yield request_group(msg.from.id, msg.chat.id);
                } else {
                    yield bot.send(new SendMessage() {
                        chat_id = msg.chat.id,
                        text = "–ò–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –æ–±—â–µ–º —á–∞—Ç–µ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü!"
                    });
                }
                return;
            }
            
            if (data.get_post(msg.from.id) != null)
                yield send_settings(msg.chat.id, msg.from.id);
            else
                yield send_group_warning(msg.chat.id, msg.from.id);
        }
        
        public async void help_command(Message msg) {
            yield bot.send(new SendMessage() {
                chat_id = msg.chat.id,
                text =
                "üõüÔ∏è –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n" +
                "/day - üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n" +
                "/tomorrow - üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n" +
                "/rasp - üóìÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é\n" +
                "/raspnext - üóìÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥. –Ω–µ–¥–µ–ª—é\n" +
                "/rasp <–ì—Ä—É–ø–ø–∞> - üóìÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã\n" +
                "/next - ‚è≠Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –ø–∞—Ä—É\n" +
                "/bells - üîîÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤\n" +
                "/bus - üöçÔ∏è –ë–ª–∏–∂–∞–π—à–∏–µ –∞–≤—Ç–æ–±—É—Å—ã\n" +
                "/settings - ‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n" +
                "/help - üõüÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"
            });
        }
        
        private async void send_group_error(string command, ChatId chat_id) {
            yield bot.send(new SendMessage() {
                chat_id = chat_id,
                parse_mode = ParseMode.MARKDOWN,
                text =
                "‚ö†Ô∏è *–ì—Ä—É–ø–ø–∞ —á–∞—Ç–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞!*\n\n" +
                "–í–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞ –Ω–µ –≤—ã–±—Ä–∞–ª –≥—Ä—É–ø–ø—É, –ø–æ–ø—Ä–æ—Å–∏ –µ–≥–æ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ.\n" +
                "–õ–∏–±–æ –≤—ã–±–µ—Ä–µ—Ä–∏ –≥—Ä—É–ø–ø—É –¥–ª—è —Å–µ–±—è –Ω–∞–ø–∏—Å–∞–≤ –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è @BarsuRaspBot\n" +
                "–ò–ª–∏ –º–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—å –≥—Ä—É–ø–ø—É –¥–ª—è –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n" +
                @"`/$command $(data.get_random_group())`"
            });
        }
        
        private async void send_group_warning(ChatId chat_id, int64 user_id) {
            if (data.get_group(user_id) != null) {
                yield bot.send(new SendMessage() {
                    chat_id = chat_id,
                    parse_mode = ParseMode.MARKDOWN,
                    text = "‚ùåÔ∏è *–¢–∞–∫–∞—è –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!*\n\n–í–æ–∑–º–æ–∂–Ω–æ –µ—ë –Ω–µ—Ç –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∞ —Ç–∞–º –µ—Å—Ç—å - –ø–Ω–∏ –∞–¥–º–∏–Ω–∞ –ø—É—Å—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç."
                });
                
                return;
            }
            
            if (data.get_config(user_id) == null)
                data.create_config(user_id);
            
            if (data.get_post(user_id) == null) {
                yield bot.send(new SendMessage() {
                    chat_id = chat_id,
                    parse_mode = ParseMode.MARKDOWN,
                    text = "‚ö†Ô∏è *–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É/–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è!*",
                    reply_markup = Keyboards.start_keyboard
                });
                
                return;
            }
            
            if (data.get_post(user_id) == UserPost.TEACHER) {
                yield bot.send(new SendMessage() {
                    chat_id = chat_id,
                    parse_mode = ParseMode.MARKDOWN,
                    text = "‚ö†Ô∏è *–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π*\n–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
                });
            }
        }
        
        private async void request_group(int64 user_id, ChatId chat_id) {
            var group = data.get_group(user_id);
            
            if (group == null)
                yield bot.send(new SendMessage() {
                    chat_id = chat_id,
                    text = "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É –¥–ª—è —Å–µ–±—è, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ—ë –¥–ª—è –≥—Ä—É–ø–ø—ã",
                    reply_markup = Keyboards.open_bot_keyboard
                });
            else
                yield bot.send(new SendMessage() {
                    chat_id = chat_id,
                    parse_mode = ParseMode.MARKDOWN,
                    text =
                    @"‚úçÔ∏è –¢–≤–æ—è –≥—Ä—É–ø–ø–∞ *$group*\n–ù–∞–∂–º–∏ —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–µ –¥–ª—è –≥—Ä—É–ø–ø—ã",
                    reply_markup = Keyboards.owner_keyboard
                });
        }
    }
}
