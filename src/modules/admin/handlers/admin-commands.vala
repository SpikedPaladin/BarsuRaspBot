using BarsuTimetable;
using Telegram;
using Gee;

namespace Admin {
    
    public class AdminCommands {
        
        public async void stat_command(Message msg) {
            int sub_count = 0, registered = 0, in_setup = 0;
            
            HashMap<string, int> chats = new HashMap<string, int>();
            foreach (var config in config_manager.get_chats()) {
                if (chats.has_key(config.group))
                    chats.set(config.group, chats.get(config.group) + 1);
                else
                    chats.set(config.group, 1);
            }
            
            foreach (var config in config_manager.get_users()) {
                if (config.subscribed)
                    sub_count++;
                
                if (config.state != null) {
                    in_setup++;
                } else {
                    if (config.type != null)
                        registered++;
                }
            }
            
            int count = 0;
            string text = "üë•Ô∏è –ì—Ä—É–ø–ø—ã:\n";
            foreach (var chat in chats) {
                text += @"$(chat.key) - $(chat.value)\n";
                count += chat.value;
            }
            text += @"–í—Å–µ–≥–æ: *$count*\n";
            
            text += "\nüë§Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n";
            text += @"–í—Å–µ–≥–æ: $(config_manager.get_users().size) (*$registered*/$in_setup)\n";
            text += @"–ü–æ–¥–ø–∏—Å–∞–Ω–æ: $sub_count";
            
            yield bot.send(new SendMessage() {
                parse_mode = ParseMode.MARKDOWN,
                chat_id = msg.chat.id,
                text = text
            });
        }
        
        public async void broadcast_command(Message msg) {
            yield broadcast_manager.send_broadcast(msg.get_command_arguments(), false);
        }
        
        public async void sync_command(Message msg) {
            var last_fetch = group_manager.get_last_fetch();
            var response = yield bot.send(new SendMessage() {
                chat_id = msg.chat.id,
                text = "*–ì—Ä—É–ø–ø—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è...*\n\n" +
                       @"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: $last_fetch"
            });
            var message_id = new Message(response.result.get_object()).message_id;
            
            var updated = yield group_manager.sync();
            
            if (updated) {
                yield bot.send(new EditMessageText() {
                    chat_id = msg.chat.id,
                    message_id = message_id,
                    text = "–ì—Ä—É–ø–ø—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!" +
                          @"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: $last_fetch"
                });
            } else {
                yield bot.send(new EditMessageText() {
                    chat_id = msg.chat.id,
                    message_id = message_id,
                    text = "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è!" +
                          @"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: $last_fetch"
                });
            }
        }
        
        public async void update_commands(Message msg) {
            var day = new BotCommand() {
                command = "day",
                description = "–ù–∞ —Å–µ–≥–æ–¥–Ω—è"
            };
            var tomorrow = new BotCommand() {
                command = "tomorrow",
                description = "–ù–∞ –∑–∞–≤—Ç—Ä–∞"
            };
            var rasp = new BotCommand() {
                command = "rasp",
                description = "–í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å"
            };
            var raspnext = new BotCommand() {
                command = "raspnext",
                description = "–í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å (—Å–ª–µ–¥. –Ω–µ–¥–µ–ª—è)"
            };
            var next = new BotCommand() {
                command = "next",
                description = "–°–ª–µ–¥—É—é—â–∞—è –ø–∞—Ä–∞"
            };
            var week = new BotCommand() {
                command = "week",
                description = "–ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é"
            };
            var weeknext = new BotCommand() {
                command = "weeknext",
                description = "–ù–∞ —Å–ª–µ–¥. –Ω–µ–¥–µ–ª—é"
            };
            var bells = new BotCommand() {
                command = "bells",
                description = "–ó–≤–æ–Ω–∫–∏"
            };
            var bus = new BotCommand() {
                command = "bus",
                description = "–ë–ª–∏–∂–∞–π—à–∏–µ –∞–≤—Ç–æ–±—É—Å—ã"
            };
            var settings = new BotCommand() {
                command = "settings",
                description = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
            };
            var help = new BotCommand() {
                command = "help",
                description = "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"
            };
            
            yield bot.send(new SetMyCommands() {
                commands = { day, tomorrow, rasp, raspnext, next, week, weeknext, bells, bus, help },
                scope = new BotCommandScopeDefault()
            });
            yield bot.send(new SetMyCommands() {
                commands = { day, tomorrow, rasp, raspnext, next, week, weeknext, bells, bus, settings, help },
                scope = new BotCommandScopeAllPrivateChats()
            });
            yield bot.send(new SetMyCommands() {
                commands = { day, tomorrow, rasp, raspnext, next, week, weeknext, bells, bus, settings, help },
                scope = new BotCommandScopeAllChatAdministrators()
            });
        }
    }
}
