using Telegram;

namespace DataStore {
    
    public async void change_group(CallbackQuery query) {
            if (query.message.chat.type == Chat.Type.PRIVATE) {
                get_config(query.from.id).state = UserState.POST;
                
                if (query.message is Message && ((Message) query.message).text.has_prefix("üëãÔ∏è –ü—Ä–∏–≤–µ—Ç"))
                    yield bot.send(new SendMessage() {
                        chat_id = query.message.chat.id,
                        text = "‚ÑπÔ∏è –ï—Å–ª–∏ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –Ω–µ—Ç - –Ω–∞–∂–º–∏ _–û—Ç–º–µ–Ω–∏—Ç—å_",
                        reply_markup = Keyboards.cancel_keyboard
                    });
                else
                    yield bot.send(new EditMessageText() {
                        chat_id = query.message.chat.id,
                        message_id = query.message.message_id,
                        text =
                        "‚ö†Ô∏è –¢—ã –≤—ã–±—Ä–∞–ª –∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É\n" +
                        "‚ÑπÔ∏è –ï—Å–ª–∏ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã –Ω–µ—Ç - –Ω–∞–∂–º–∏ _–û—Ç–º–µ–Ω–∏—Ç—å_",
                        reply_markup = Keyboards.cancel_keyboard
                    });
                
                yield bot.send(new SendMessage() {
                    chat_id = query.message.chat.id,
                    parse_mode = ParseMode.MARKDOWN,
                    reply_markup = Keyboards.post_keyboard,
                    text = "‚úçÔ∏è –¢—ã —Å—Ç—É–¥–µ–Ω—Ç –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å?"
                });
                return;
            }
            
            var chat_member = yield bot.get_chat_member(query.message.chat.id, query.from.id);
            
            if (chat_member is ChatMemberOwner) {
                var chat_group = get_chat_config(query.message.chat.id).group;
                var group = get_config(query.from.id).group;
                
                if (chat_group == group) {
                    yield bot.send(new EditMessageText() {
                        chat_id = query.message.chat.id,
                        message_id = query.message.message_id,
                        text =
                        "‚ö†Ô∏è –£ —Ç–µ–±—è —Ç–∞–∫–∞—è –∂–µ –≥—Ä—É–ø–ø–∞ –∫–∞–∫ –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤ —á–∞—Ç–µ!",
                        reply_markup = Keyboards.open_bot_keyboard
                    });
                } else if (group == null) {
                    yield bot.send(new EditMessageText() {
                        chat_id = query.message.chat.id,
                        message_id = query.message.message_id,
                        text =
                        "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É –¥–ª—è —Å–µ–±—è, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ—ë –¥–ª—è –≥—Ä—É–ø–ø—ã",
                        reply_markup = Keyboards.open_bot_keyboard
                    });
                } else {
                    yield bot.send(new EditMessageText() {
                        chat_id = query.message.chat.id,
                        message_id = query.message.message_id,
                        parse_mode = ParseMode.MARKDOWN,
                        text =
                        @"‚úçÔ∏è –¢–≤–æ—è –≥—Ä—É–ø–ø–∞ *$group*\n–ù–∞–∂–º–∏ —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ—ë –¥–ª—è –≥—Ä—É–ø–ø—ã",
                        reply_markup = Keyboards.owner_keyboard
                    });
                }
            } else {
                send_alert(query.id, "–ò–∑–º–µ–Ω—è—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –≤ –æ–±—â–µ–º —á–∞—Ç–µ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü!");
            }
        }
}