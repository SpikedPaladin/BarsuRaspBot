using Telegram;

namespace Keyboards {
    public static InlineKeyboardMarkup owner_keyboard;
    public static InlineKeyboardMarkup cancel_keyboard;
    public static InlineKeyboardMarkup open_bot_keyboard;
    public static InlineKeyboardMarkup enable_sub_keyboard;
    public static InlineKeyboardMarkup disable_sub_keyboard;
    
    public static ReplyKeyboardMarkup main_keyboard;
    public static ReplyKeyboardMarkup post_keyboard;
    
    public static void load() {
        cancel_keyboard = new InlineKeyboardMarkup()
            .add_button(new InlineKeyboardButton() { text = "–û—Ç–º–µ–Ω–∞", callback_data = "cancel" });
        owner_keyboard = new InlineKeyboardMarkup()
            .add_button(new InlineKeyboardButton() { text = "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data = "install" })
            .new_row()
            .add_button(new InlineKeyboardButton() { text = "–û—Ç–º–µ–Ω–∞", callback_data = "cancel" })
            .new_row()
            .add_button(new InlineKeyboardButton() { text = "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é", url = "t.me/BarsuRaspBot" });
        open_bot_keyboard = new InlineKeyboardMarkup()
            .add_button(new InlineKeyboardButton() { text = "–û—Ç–º–µ–Ω–∞", callback_data = "cancel" })
            .new_row()
            .add_button(new InlineKeyboardButton() { text = "–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É", url = "t.me/BarsuRaspBot" });
        enable_sub_keyboard = new InlineKeyboardMarkup()
            .add_button(new InlineKeyboardButton() { text = "–í–∫–ª. —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data = "enable_sub" }).new_row()
            .add_button(new InlineKeyboardButton() { text = "–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É", callback_data = "change_group" });
        disable_sub_keyboard = new InlineKeyboardMarkup()
            .add_button(new InlineKeyboardButton() { text = "–í—ã–∫–ª. —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data = "disable_sub" }).new_row()
            .add_button(new InlineKeyboardButton() { text = "–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É", callback_data = "change_group" });
        
        post_keyboard = new ReplyKeyboardMarkup() { is_persistent = true, resize_keyboard = true }
            .add_button(new KeyboardButton() { text = "üßë‚ÄçüéìÔ∏è –°—Ç—É–¥–µ–Ω—Ç" })
            .new_row()
            .add_button(new KeyboardButton() { text = "üßë‚Äçüè´Ô∏è –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å" });
        
        main_keyboard = new ReplyKeyboardMarkup() { is_persistent = true, resize_keyboard = true }
            .add_button(new KeyboardButton() { text = "‚ñ∂Ô∏è –°–µ–≥–æ–¥–Ω—è" })
            .add_button(new KeyboardButton() { text = "‚è≠Ô∏è –ó–∞–≤—Ç—Ä–∞" })
            .new_row()
            .add_button(new KeyboardButton() { text = "‚è©Ô∏è –°–ª–µ–¥. –ø–∞—Ä–∞" })
            .add_button(new KeyboardButton() { text = "üóìÔ∏è –í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å" })
            .new_row()
            .add_button(new KeyboardButton() { text = "üñºÔ∏è –í—Å—è –Ω–µ–¥–µ–ª—è" })
            .new_row()
            .add_button(new KeyboardButton() { text = "üîîÔ∏è –ó–≤–æ–Ω–∫–∏" })
            .add_button(new KeyboardButton() { text = "üöçÔ∏è –ê–≤—Ç–æ–±—É—Å—ã" })
            .add_button(new KeyboardButton() { text = "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏" });
    }
}
